1. LINEAR SEARCH
#include <iostream>
#define MAX 100
using namespace std;

int main(){
        int a[100];
        int n , key , comparisions = 0 , test_cases;
        bool f;

        cin >> test_cases;
        while(test_cases != 0){
            comparisions = 0;
            f = false;
            cin >> n;

            for(int i=0; i<n; i++){
                cin >> a[i];
            }

            cin >> key;

            for(int i = 0; i<n; i++){
                comparisions++;
                if(a[i] == key){
                    f = true;
                    cout << "Present " << comparisions << endl;
                    break;
                }
            }

            if(f == false){
                cout << "Not Present " << comparisions << endl;
            }
            test_cases--;
        }
        return 0;
}

2.BINARY SEARCH
#include <iostream>
#define MAX 100
using namespace std;

int main(){
        int a[100];
        int n , key , comparisions = 0 , test_cases , start , last , mid;
        bool f;

        cin >> test_cases;
        while(test_cases != 0){
            comparisions = 0;
            f = false;
            cin >> n;

            for(int i=0; i<n; i++){
                cin >> a[i];
            }

            cin >> key;
            start = 0;
            last = n-1;
            while(start <= last){
                comparisions++;
                mid = (start + last)/2;
                if(a[mid] == key){
                    f = true;
                    cout << "Present "<< comparisions;
                    break;
                }
                else if(a[mid] > key)
                    last = mid - 1;
                else
                    start = mid + 1;
            }
            if(f == false){
                cout << "Not Present " << comparisions << endl;
            }
            test_cases--;
        }
        return 0;
}

3.JUMP SEARCH
